[{"E:\\Anu3\\IS\\proiect chatbot\\DoctorulVirtualFE\\src\\index.js":"1","E:\\Anu3\\IS\\proiect chatbot\\DoctorulVirtualFE\\src\\App.js":"2","E:\\Anu3\\IS\\proiect chatbot\\DoctorulVirtualFE\\src\\components\\AdminPannel.js":"3","E:\\Anu3\\IS\\proiect chatbot\\DoctorulVirtualFE\\src\\components\\ProtectedRoute.js":"4","E:\\Anu3\\IS\\proiect chatbot\\DoctorulVirtualFE\\src\\components\\Signup.js":"5","E:\\Anu3\\IS\\proiect chatbot\\DoctorulVirtualFE\\src\\components\\Login.js":"6","E:\\Anu3\\IS\\proiect chatbot\\DoctorulVirtualFE\\src\\context\\UserAuthContext.js":"7","E:\\Anu3\\IS\\proiect chatbot\\DoctorulVirtualFE\\src\\components\\Home.js":"8","E:\\Anu3\\IS\\proiect chatbot\\DoctorulVirtualFE\\src\\components\\ChatApp.js":"9","E:\\Anu3\\IS\\proiect chatbot\\DoctorulVirtualFE\\src\\firebase.js":"10"},{"size":333,"mtime":1689830559000,"results":"11","hashOfConfig":"12"},{"size":1512,"mtime":1705431736972,"results":"13","hashOfConfig":"12"},{"size":3472,"mtime":1705410065539,"results":"14","hashOfConfig":"12"},{"size":389,"mtime":1705149950230,"results":"15","hashOfConfig":"12"},{"size":2458,"mtime":1705160410715,"results":"16","hashOfConfig":"12"},{"size":2038,"mtime":1705432602939,"results":"17","hashOfConfig":"12"},{"size":1877,"mtime":1705395183809,"results":"18","hashOfConfig":"12"},{"size":734,"mtime":1705144774753,"results":"19","hashOfConfig":"12"},{"size":5403,"mtime":1705432505925,"results":"20","hashOfConfig":"12"},{"size":565,"mtime":1689830559000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"hrfisq",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"E:\\Anu3\\IS\\proiect chatbot\\DoctorulVirtualFE\\src\\index.js",[],["47","48"],"E:\\Anu3\\IS\\proiect chatbot\\DoctorulVirtualFE\\src\\App.js",[],"E:\\Anu3\\IS\\proiect chatbot\\DoctorulVirtualFE\\src\\components\\AdminPannel.js",["49"],"import React, { useState, useEffect } from \"react\";\r\nimport { useUserAuth } from \"../context/UserAuthContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport './AdminPannel.css'\r\n\r\nconst URL = 'https://jsonplaceholder.typicode.com/users'\r\n\r\nfunction useAPi(url) {\r\n  const [data, setData] = useState([])\r\n\r\n  useEffect(() => {\r\n    getData()\r\n  }, [])\r\n\r\n  const getData = async () => {\r\n    const response = await fetch(\"http://localhost:8080/users\", {\r\n     method: \"GET\",\r\n     headers: {\r\n       \"Content-Type\": \"application/json\"\r\n     }\r\n   })\r\n   .then((data) => {\r\n    if (!data.ok){\r\n      throw new Error(data.json());\r\n    }\r\n    return data.json();\r\n    })\r\n    .then((data) => {\r\n      console.log(data);\r\n      return data;\r\n    });\r\n    console.log(response)\r\n    setData(response)\r\n  }\r\n\r\n  const removeData = async (id) => {\r\n    const response = await fetch('http://localhost:8080/user/'+id, {\r\n     method: \"DELETE\",\r\n     headers: {\r\n       \"Content-Type\": \"application/json\"\r\n     }\r\n   })\r\n   .then((data) => {\r\n    if (!data.ok){\r\n      throw new Error(data.json());\r\n    }\r\n    return data;\r\n    })\r\n\r\n    console.log(response)\r\n    const del = data.filter((item) => id !== item.id)\r\n    setData(del)\r\n  }\r\n\r\n  return { data, removeData }\r\n}\r\n\r\n\r\nconst AdminPannel = () => {\r\n    const { data, removeData } = useAPi(URL)\r\n     \r\n    const { logOut, user, role } = useUserAuth();\r\n    const navigate = useNavigate();\r\n    const handleLogout = async () => {\r\n      try {\r\n        await logOut();\r\n        navigate(\"/\");\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    };\r\n\r\n    const renderHeader = () => {\r\n        let headerElement = ['id', 'name', 'username','email', 'operatiuni']\r\n\r\n        return headerElement.map((key, index) => {\r\n            return <th key={index}>{key.toUpperCase()}</th>\r\n        })\r\n    }\r\n\r\n    const renderBody = () => {\r\n        return data && data.map(({ id, name, username, email }) => {\r\n            return (\r\n                <tr key={id}>\r\n                    <td>{id}</td>\r\n                    <td>{name}</td>\r\n                    <td>{username}</td>\r\n                    <td>{email}</td>\r\n                    <td className='operation'>\r\n                        <button className='button' onClick={() => removeData(id)}>Stergere</button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n          <div className=\"big_div\">\r\n            <div className=\"p-4 box mt-3 user_info\">\r\n              <div className=\"text-center user_info_box\">\r\n                <h3>Bine ai venit, <br /></h3>\r\n                <h4>{user}</h4>\r\n              </div>\r\n              \r\n              <div className=\"d-grid gap-2 button_class\">\r\n                  <Button className=\"text-center\" variant=\"primary\"  onClick={handleLogout}>\r\n                    Log out\r\n                  </Button>\r\n                  \r\n              </div>\r\n            </div>\r\n            <div className=\"table_div\">\r\n              <h1 id='title'>Utilizatori</h1>\r\n              <table id='employee'>\r\n                  <thead>\r\n                      <tr>{renderHeader()}</tr>\r\n                  </thead>\r\n                  <tbody>\r\n                      {renderBody()}\r\n                  </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default AdminPannel;","E:\\Anu3\\IS\\proiect chatbot\\DoctorulVirtualFE\\src\\components\\ProtectedRoute.js",[],"E:\\Anu3\\IS\\proiect chatbot\\DoctorulVirtualFE\\src\\components\\Signup.js",[],"E:\\Anu3\\IS\\proiect chatbot\\DoctorulVirtualFE\\src\\components\\Login.js",["50","51"],"import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Form, Alert, Button } from \"react-bootstrap\";\nimport { useUserAuth } from \"../context/UserAuthContext\";\n\nconst Login = () => {\n  const [usernameOrEmail, setUsernameOrEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const { logIn, user, role } = useUserAuth();\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(usernameOrEmail, password)\n    setError(\"\");\n    try {\n\n      const loggedInUser = await logIn(usernameOrEmail, password)\n      if (loggedInUser.role === \"ROLE_ADMIN\"){\n        navigate(\"/admin\");\n      } else {\n        navigate(\"/chat\");\n      }\n      \n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"p-4 box\" style={{borderRadius: \"15px\" }}>\n        <h2 className=\"mb-3\">Doctorul Virtual Login</h2>\n\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n\n        <Form onSubmit={handleSubmit}>\n          \n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Email address or username\"\n              onChange={(e) => setUsernameOrEmail(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Form.Group>\n\n          <div className=\"d-grid gap-2\">\n            <Button variant=\"primary\" type=\"Submit\">\n              Log In\n            </Button>\n          </div>\n        </Form>\n      </div>\n      <div className=\"p-4 box mt-3 text-center\" style={{borderRadius: \"15px\" }}>\n        Nu ai cont? Inregistreaza-te <Link to=\"/signup\">Sign up</Link>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","E:\\Anu3\\IS\\proiect chatbot\\DoctorulVirtualFE\\src\\context\\UserAuthContext.js",["52","53"],"import { createContext, useContext, useEffect, useState } from \"react\";\nimport { auth } from \"../firebase\";\n\nconst userAuthContext = createContext();\n\nexport function UserAuthContextProvider({ children }) {\n  const [user, setUser] = useState({});\n  const [role, setRole] = useState({});\n\n  // function logIn(email, password) {\n  //   return signInWithEmailAndPassword(auth, email, password);\n  // }\n\n  async function logIn(usernameOrEmail, password) {\n    const apiRequestBody = {\n      usernameOrEmail,\n      password\n    }\n\n    const response = await fetch(\"http://localhost:8080/login\", {\n     method: \"POST\",\n     headers: {\n       \"Content-Type\": \"application/json\"\n     },\n     body: JSON.stringify(apiRequestBody),\n   })\n   .then((data) => {\n    if (!data.ok){\n      throw new Error(\"Userul nu poate fi logat!\");\n    }\n    return data.json();\n    })\n    .then((data) => {\n      console.log(data);\n      setUser(data.user)\n      setRole(data.role)\n      return data;\n    });\n    return response;\n  }\n\n  // function signUp(email, username, name, password) {\n  //   return createUserWithEmailAndPassword(auth, email, password);\n  // }\n\n  async function signUp(email, username, name, password) {\n    const apiRequestBody = {\n      email,\n      username,\n      name,\n      password\n    }\n\n    const response = await fetch(\"http://localhost:8080/signup\", {\n     method: \"POST\",\n     headers: {\n       \"Content-Type\": \"application/json\"\n     },\n     body: JSON.stringify(apiRequestBody),\n   })\n\n   return response\n  }\n\n\n  function logOut() {\n    setUser(-1)\n    setRole(-1)\n    fetch(\"http://localhost:8080/logout\", {\n     method: \"GET\",\n   })\n  }\n\n  return (\n    <userAuthContext.Provider\n      value={{ user, role, logIn, signUp, logOut }}\n    >\n      {children}\n    </userAuthContext.Provider>\n  );\n}\n\nexport function useUserAuth() {\n  return useContext(userAuthContext);\n}\n","E:\\Anu3\\IS\\proiect chatbot\\DoctorulVirtualFE\\src\\components\\Home.js",[],"E:\\Anu3\\IS\\proiect chatbot\\DoctorulVirtualFE\\src\\components\\ChatApp.js",["54","55","56","57"],"import { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"./ChatApp.css\";\r\nimport \"@chatscope/chat-ui-kit-styles/dist/default/styles.min.css\";\r\nimport { useUserAuth } from \"../context/UserAuthContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n MainContainer,\r\n ChatContainer,\r\n MessageList,\r\n Message,\r\n MessageInput,\r\n TypingIndicator,\r\n} from \"@chatscope/chat-ui-kit-react\";\r\n\r\nconst ChatApp = () => {\r\n // State to manage the typing indicator of the chatbot\r\n const [isChatbotTyping, setIsChatbotTyping] = useState(false);\r\n const { logOut, user, role } = useUserAuth();\r\n const navigate = useNavigate();\r\n const handleLogout = async () => {\r\n    try {\r\n      await logOut();\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n // State to store chat messages\r\n const [chatMessages, setChatMessages] = useState([\r\n   {\r\n     message: \"Buna, sunt Doctorul Virtual si sunt aici pentru a va raspunde la intrebarile tale medicale\",\r\n     sender: \"Doctorul Virtual\",\r\n   },\r\n ]);\r\n\r\n // Function to handle user messages\r\n const handleUserMessage = async (userMessage) => {\r\n   // Create a new user message object\r\n   const newUserMessage = {\r\n     message: userMessage,\r\n     sender: \"user\",\r\n     direction: \"outgoing\",\r\n   };\r\n\r\n   // Update chat messages state with the new user message\r\n   const updatedChatMessages = [...chatMessages, newUserMessage];\r\n   setChatMessages(updatedChatMessages);\r\n\r\n   // Set the typing indicator for the chatbot\r\n   setIsChatbotTyping(true);\r\n\r\n   // Process user message with ChatGPT\r\n   await processUserMessageToChatGPT(updatedChatMessages);\r\n };\r\n\r\n // Function to send the user message to ChatGPT API\r\n async function processUserMessageToChatGPT(messages) {\r\n  //console.log(messages)\r\n   // Prepare the messages in the required format for the API\r\n   let apiMessages = messages.map((messageObject) => {\r\n     let role = \"\";\r\n     if (messageObject.sender === \"Doctorul Virtual\") {\r\n       role = \"assistant\";\r\n     } else {\r\n       role = \"user\";\r\n     }\r\n     return { role: role, content: messageObject.message };\r\n   });\r\n\r\n   console.log(messages.at(messages.length - 1).message)\r\n   // System message for ChatGPT\r\n   const systemMessage = {\r\n     role: \"system\",\r\n     content: \"Explain all concept like a Professor in Biochemistry\",\r\n   };\r\n\r\n   // Prepare the API request body\r\n  //  const apiRequestBody = {\r\n  //    model: \"gpt-3.5-turbo\",\r\n  //    messages: [\r\n  //      systemMessage, // System message should be in front of user messages\r\n  //      ...apiMessages,\r\n  //    ],\r\n  //  };\r\n\r\n  let prompt = messages.at(messages.length - 1).message\r\n\r\n  const apiRequestBody = {\r\n    prompt\r\n  }\r\n\r\n   // Send the user message to ChatGPT API\r\n   await fetch(\"http://localhost:8080/chat\", {\r\n     method: \"POST\",\r\n     headers: {\r\n       \"Content-Type\": \"application/json\"\r\n     },\r\n     body: JSON.stringify(apiRequestBody),\r\n   })\r\n     .then((data) => {\r\n       //console.log(data.json());\r\n       return data.json();\r\n     })\r\n     .then((data) => {\r\n       // Update chat messages with ChatGPT's response\r\n       console.log(data);\r\n       setChatMessages([\r\n         ...messages,\r\n         {\r\n           //message: data.choices[0].message.content,\r\n           message: data.message,\r\n           sender: \"Doctorul Virtual\",\r\n         },\r\n       ]);\r\n       // Set the typing indicator to false after getting the response\r\n       setIsChatbotTyping(false);\r\n     });\r\n }\r\n\r\n const handleUserAttach = async (e) => { \r\n }\r\n\r\n return (\r\n   <>\r\n    \r\n     {/* A container for the chat window */}\r\n     <div style={{ position: \"relative\", height: \"776px\", width: \"700px\"}}>\r\n       <div className=\"p-4 box user_info_chat\" style={{borderRadius: \"15px\"}}>\r\n        <div className=\"text-center user_info_chat_box\">\r\n          <h3>Bine ai venit, <br /></h3>\r\n          <h4>{user}</h4>\r\n        </div>\r\n        \r\n        <div className=\"d-grid gap-2 button_class\">\r\n            <Button className=\"text-center\" variant=\"primary\"  onClick={handleLogout}>\r\n              Log out\r\n            </Button>\r\n            \r\n        </div>\r\n      </div>\r\n       <MainContainer style={{ height: \"70%\", padding: \"10px\",borderRadius: \"15px\" }}>\r\n         <ChatContainer >\r\n           {/* Display chat messages and typing indicator */}\r\n           <MessageList\r\n             typingIndicator={\r\n               isChatbotTyping ? (\r\n                 <TypingIndicator content=\"Doctorul Virtual tasteaza...\" />\r\n               ) : null\r\n             }\r\n           >\r\n             {/* Map through chat messages and render each message */}\r\n             {chatMessages.map((message, i) => {\r\n               return (\r\n                 <Message\r\n                   key={i}\r\n                   model={message}\r\n                   style={\r\n                     message.sender === \"Doctorul Virtual\" ? { textAlign: \"left\" } : {}\r\n                   }\r\n                 />\r\n               );\r\n             })}\r\n           </MessageList>\r\n           {/* Input field for the user to type messages */}\r\n           <MessageInput\r\n             placeholder=\"Scrie mesajul aici\"\r\n             onSend={handleUserMessage}\r\n             onAttachClick={(e) => this.handleUserAttach(e)}\r\n           />\r\n         </ChatContainer>\r\n       </MainContainer>\r\n     </div>\r\n   </>\r\n );\r\n}\r\n\r\nexport default ChatApp;","E:\\Anu3\\IS\\proiect chatbot\\DoctorulVirtualFE\\src\\firebase.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":63,"column":27,"nodeType":"64","messageId":"65","endLine":63,"endColumn":31},{"ruleId":"62","severity":1,"message":"66","line":10,"column":18,"nodeType":"64","messageId":"65","endLine":10,"endColumn":22},{"ruleId":"62","severity":1,"message":"63","line":10,"column":24,"nodeType":"64","messageId":"65","endLine":10,"endColumn":28},{"ruleId":"62","severity":1,"message":"67","line":1,"column":37,"nodeType":"64","messageId":"65","endLine":1,"endColumn":46},{"ruleId":"62","severity":1,"message":"68","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":14},{"ruleId":"62","severity":1,"message":"63","line":19,"column":24,"nodeType":"64","messageId":"65","endLine":19,"endColumn":28},{"ruleId":"62","severity":1,"message":"69","line":62,"column":8,"nodeType":"64","messageId":"65","endLine":62,"endColumn":19},{"ruleId":"62","severity":1,"message":"70","line":74,"column":10,"nodeType":"64","messageId":"65","endLine":74,"endColumn":23},{"ruleId":"62","severity":1,"message":"71","line":122,"column":8,"nodeType":"64","messageId":"65","endLine":122,"endColumn":24},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'role' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'useEffect' is defined but never used.","'auth' is defined but never used.","'apiMessages' is assigned a value but never used.","'systemMessage' is assigned a value but never used.","'handleUserAttach' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]