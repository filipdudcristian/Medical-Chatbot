{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Doodles\\\\Desktop\\\\react-auth-main\\\\src\\\\context\\\\UserAuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { auth } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userAuthContext = /*#__PURE__*/createContext();\nexport function UserAuthContextProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState({});\n  const [role, setRole] = useState({});\n\n  // function logIn(email, password) {\n  //   return signInWithEmailAndPassword(auth, email, password);\n  // }\n\n  async function logIn(usernameOrEmail, password) {\n    const apiRequestBody = {\n      usernameOrEmail,\n      password\n    };\n    const response = await fetch(\"http://localhost:8080/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(apiRequestBody)\n    }).then(data => {\n      if (!data.ok) {\n        throw new Error(\"Userul nu poate fi logat!\");\n      }\n      return data.json();\n    }).then(data => {\n      console.log(data);\n      setUser(data.user);\n      setRole(data.role);\n      return data;\n    });\n    return response;\n  }\n\n  // function signUp(email, username, name, password) {\n  //   return createUserWithEmailAndPassword(auth, email, password);\n  // }\n\n  async function signUp(email, username, name, password) {\n    const apiRequestBody = {\n      email,\n      username,\n      name,\n      password\n    };\n    const response = await fetch(\"http://localhost:8080/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(apiRequestBody)\n    });\n    return response;\n  }\n  function logOut() {\n    setUser(-1);\n    setRole(-1);\n    fetch(\"http://localhost:8080/logout\", {\n      method: \"GET\"\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(userAuthContext.Provider, {\n    value: {\n      user,\n      role,\n      logIn,\n      signUp,\n      logOut\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(UserAuthContextProvider, \"iAQSuma68YPoqVcOBQnqQhQO27Y=\");\n_c = UserAuthContextProvider;\nexport function useUserAuth() {\n  _s2();\n  return useContext(userAuthContext);\n}\n_s2(useUserAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"UserAuthContextProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","auth","jsxDEV","_jsxDEV","userAuthContext","UserAuthContextProvider","children","_s","user","setUser","role","setRole","logIn","usernameOrEmail","password","apiRequestBody","response","fetch","method","headers","body","JSON","stringify","then","data","ok","Error","json","console","log","signUp","email","username","name","logOut","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUserAuth","_s2","$RefreshReg$"],"sources":["C:/Users/Doodles/Desktop/react-auth-main/src/context/UserAuthContext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\nimport { auth } from \"../firebase\";\n\nconst userAuthContext = createContext();\n\nexport function UserAuthContextProvider({ children }) {\n  const [user, setUser] = useState({});\n  const [role, setRole] = useState({});\n\n  // function logIn(email, password) {\n  //   return signInWithEmailAndPassword(auth, email, password);\n  // }\n\n  async function logIn(usernameOrEmail, password) {\n    const apiRequestBody = {\n      usernameOrEmail,\n      password\n    }\n\n    const response = await fetch(\"http://localhost:8080/login\", {\n     method: \"POST\",\n     headers: {\n       \"Content-Type\": \"application/json\"\n     },\n     body: JSON.stringify(apiRequestBody),\n   })\n   .then((data) => {\n    if (!data.ok){\n      throw new Error(\"Userul nu poate fi logat!\");\n    }\n    return data.json();\n    })\n    .then((data) => {\n      console.log(data);\n      setUser(data.user)\n      setRole(data.role)\n      return data;\n    });\n    return response;\n  }\n\n  // function signUp(email, username, name, password) {\n  //   return createUserWithEmailAndPassword(auth, email, password);\n  // }\n\n  async function signUp(email, username, name, password) {\n    const apiRequestBody = {\n      email,\n      username,\n      name,\n      password\n    }\n\n    const response = await fetch(\"http://localhost:8080/signup\", {\n     method: \"POST\",\n     headers: {\n       \"Content-Type\": \"application/json\"\n     },\n     body: JSON.stringify(apiRequestBody),\n   })\n\n   return response\n  }\n\n\n  function logOut() {\n    setUser(-1)\n    setRole(-1)\n    fetch(\"http://localhost:8080/logout\", {\n     method: \"GET\",\n   })\n  }\n\n  return (\n    <userAuthContext.Provider\n      value={{ user, role, logIn, signUp, logOut }}\n    >\n      {children}\n    </userAuthContext.Provider>\n  );\n}\n\nexport function useUserAuth() {\n  return useContext(userAuthContext);\n}\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACtE,SAASC,IAAI,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,eAAe,gBAAGP,aAAa,CAAC,CAAC;AAEvC,OAAO,SAASQ,uBAAuBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACpD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEpC;EACA;EACA;;EAEA,eAAeY,KAAKA,CAACC,eAAe,EAAEC,QAAQ,EAAE;IAC9C,MAAMC,cAAc,GAAG;MACrBF,eAAe;MACfC;IACF,CAAC;IAED,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MAC3DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,cAAc;IACrC,CAAC,CAAC,CACDQ,IAAI,CAAEC,IAAI,IAAK;MACf,IAAI,CAACA,IAAI,CAACC,EAAE,EAAC;QACX,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;MACA,OAAOF,IAAI,CAACG,IAAI,CAAC,CAAC;IAClB,CAAC,CAAC,CACDJ,IAAI,CAAEC,IAAI,IAAK;MACdI,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;MACjBf,OAAO,CAACe,IAAI,CAAChB,IAAI,CAAC;MAClBG,OAAO,CAACa,IAAI,CAACd,IAAI,CAAC;MAClB,OAAOc,IAAI;IACb,CAAC,CAAC;IACF,OAAOR,QAAQ;EACjB;;EAEA;EACA;EACA;;EAEA,eAAec,MAAMA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,EAAEnB,QAAQ,EAAE;IACrD,MAAMC,cAAc,GAAG;MACrBgB,KAAK;MACLC,QAAQ;MACRC,IAAI;MACJnB;IACF,CAAC;IAED,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;MAC5DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,cAAc;IACrC,CAAC,CAAC;IAEF,OAAOC,QAAQ;EAChB;EAGA,SAASkB,MAAMA,CAAA,EAAG;IAChBzB,OAAO,CAAC,CAAC,CAAC,CAAC;IACXE,OAAO,CAAC,CAAC,CAAC,CAAC;IACXM,KAAK,CAAC,8BAA8B,EAAE;MACrCC,MAAM,EAAE;IACV,CAAC,CAAC;EACH;EAEA,oBACEf,OAAA,CAACC,eAAe,CAAC+B,QAAQ;IACvBC,KAAK,EAAE;MAAE5B,IAAI;MAAEE,IAAI;MAAEE,KAAK;MAAEkB,MAAM;MAAEI;IAAO,CAAE;IAAA5B,QAAA,EAE5CA;EAAQ;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B;AAACjC,EAAA,CA3EeF,uBAAuB;AAAAoC,EAAA,GAAvBpC,uBAAuB;AA6EvC,OAAO,SAASqC,WAAWA,CAAA,EAAG;EAAAC,GAAA;EAC5B,OAAO7C,UAAU,CAACM,eAAe,CAAC;AACpC;AAACuC,GAAA,CAFeD,WAAW;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module"}